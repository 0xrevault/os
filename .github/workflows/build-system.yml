name: Build Linux Kernel (arm64)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  kernel:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout (no submodules)
        uses: actions/checkout@v4
        with:
          submodules: false
          fetch-depth: 0  # keep full history for the main repo

      - name: Read linux submodule commit
        id: submod
        run: |
          LINUX_SHA="$(git ls-tree HEAD submodules/linux | awk '{print $3}')"
          echo "sha=$LINUX_SHA" >> "$GITHUB_OUTPUT"
          echo "[i] linux submodule sha: $LINUX_SHA"

      - name: Restore linux source cache
        uses: actions/cache@v4
        with:
          path: submodules/linux
          key: linux-src-${{ steps.submod.outputs.sha }}

      - name: Init/Update submodule (fast)
        run: |
          git submodule init
          # use depth=1 for faster initial clone; patch script will unshallow if needed
          git -c protocol.version=2 submodule update --force --recursive --depth=1

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ccache
          key: ccache-${{ runner.os }}-${{ hashFiles('**/Kconfig', 'submodules/linux/**') }}
          restore-keys: |
            ccache-${{ runner.os }}-

      - name: Install deps & ccache
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential bc bison flex libssl-dev \
            libelf-dev dwarves python3 rsync device-tree-compiler \
            gcc-aarch64-linux-gnu ccache
          echo 'export CCACHE_DIR=$HOME/.cache/ccache' >> $GITHUB_ENV
          echo 'export PATH="/usr/lib/ccache:$PATH"' >> $GITHUB_ENV

      - name: Build kernel (v6.12.y submodule)
        run: |
          chmod +x system/toolchain/apply_linux_patches.sh
          chmod +x system/toolchain/build_linux_ci.sh
          system/toolchain/apply_linux_patches.sh submodules/linux system/patches/linux
          system/toolchain/build_linux_ci.sh submodules/linux

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-arm64-${{ github.sha }}
          path: |
            out/Image.gz
            out/dtbs/*.dtb
            out/modules.tar.zst
          if-no-files-found: error